-- MySQL Script generated by MySQL Workbench
-- пн, 13-лис-2023 18:32:48 +0100
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`building`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`building` (
  `building_id` INT NULL DEFAULT NULL,
  `building_name` VARCHAR(100) NOT NULL,
  `location_build` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`building_id`));


-- -----------------------------------------------------
-- Table `mydb`.`floor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`floor` (
  `floor_id` INT NULL DEFAULT NULL,
  `building_id` INT NOT NULL,
  `floor_number` INT NOT NULL,
  PRIMARY KEY (`floor_id`),
  INDEX (`building_id` ASC) VISIBLE,
  CONSTRAINT ``
    FOREIGN KEY (`building_id`)
    REFERENCES `mydb`.`building` (`building_id`));


-- -----------------------------------------------------
-- Table `mydb`.`room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`room` (
  `room_id` INT NULL DEFAULT NULL,
  `floor_id` INT NOT NULL,
  `room_number` VARCHAR(20) NOT NULL,
  `capacity` INT NOT NULL,
  `room_type` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`room_id`),
  INDEX (`floor_id` ASC) VISIBLE,
  CONSTRAINT ``
    FOREIGN KEY (`floor_id`)
    REFERENCES `mydb`.`floor` (`floor_id`));


-- -----------------------------------------------------
-- Table `mydb`.`professor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`professor` (
  `professor_id` INT NULL DEFAULT NULL,
  `professor_name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`professor_id`));


-- -----------------------------------------------------
-- Table `mydb`.`room_equipment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`room_equipment` (
  `equipment_id` INT NULL DEFAULT NULL,
  `room_id` INT NOT NULL,
  `equipment_name` VARCHAR(100) NOT NULL,
  `quantity` INT NOT NULL,
  PRIMARY KEY (`equipment_id`),
  INDEX (`room_id` ASC) VISIBLE,
  CONSTRAINT ``
    FOREIGN KEY (`room_id`)
    REFERENCES `mydb`.`room` (`room_id`));


-- -----------------------------------------------------
-- Table `mydb`.`room_condition`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`room_condition` (
  `condition_id` INT NULL DEFAULT NULL,
  `room_id` INT NOT NULL,
  `condition_description` TEXT NOT NULL,
  `date_reported` DATE NOT NULL,
  PRIMARY KEY (`condition_id`),
  INDEX (`room_id` ASC) VISIBLE,
  CONSTRAINT ``
    FOREIGN KEY (`room_id`)
    REFERENCES `mydb`.`room` (`room_id`));


-- -----------------------------------------------------
-- Table `mydb`.`maintenance_request`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`maintenance_request` (
  `request_id` INT NULL DEFAULT NULL,
  `room_id` INT NOT NULL,
  `description` TEXT NOT NULL,
  `date_requested` DATE NOT NULL,
  `status` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`request_id`),
  INDEX (`room_id` ASC) VISIBLE,
  CONSTRAINT ``
    FOREIGN KEY (`room_id`)
    REFERENCES `mydb`.`room` (`room_id`));


-- -----------------------------------------------------
-- Table `mydb`.`room_reservation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`room_reservation` (
  `reservation_id` INT NULL DEFAULT NULL,
  `room_id` INT NOT NULL,
  `professor_id` INT NOT NULL,
  `subject_id` INT NOT NULL,
  `day_of_week` VARCHAR(10) NOT NULL,
  `start_time` TIME NOT NULL,
  `end_time` TIME NOT NULL,
  `status` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`reservation_id`),
  INDEX (`room_id` ASC) VISIBLE,
  INDEX (`professor_id` ASC) VISIBLE,
  INDEX (`subject_id` ASC) VISIBLE,
  CONSTRAINT ``
    FOREIGN KEY (`room_id`)
    REFERENCES `mydb`.`room` (`room_id`),
  CONSTRAINT ``
    FOREIGN KEY (`professor_id`)
    REFERENCES `mydb`.`professor` (`professor_id`),
  CONSTRAINT ``
    FOREIGN KEY (`subject_id`)
    REFERENCES `mydb`.`subject` (`subject_id`));


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `mydb`.`building`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`building` (`building_id`, `building_name`, `location_build`) VALUES (1, 'Головний корпус', 'Головна вулиця, 1');
INSERT INTO `mydb`.`building` (`building_id`, `building_name`, `location_build`) VALUES (2, 'Корпус інформатики', 'Вулиця ІТ, 5');
INSERT INTO `mydb`.`building` (`building_id`, `building_name`, `location_build`) VALUES (3, 'Корпус гуманітарних наук', 'Проспект Знань, 10');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`floor`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`floor` (`floor_id`, `building_id`, `floor_number`) VALUES (1, 1, 1);
INSERT INTO `mydb`.`floor` (`floor_id`, `building_id`, `floor_number`) VALUES (2, 1, 2);
INSERT INTO `mydb`.`floor` (`floor_id`, `building_id`, `floor_number`) VALUES (3, 2, 1);
INSERT INTO `mydb`.`floor` (`floor_id`, `building_id`, `floor_number`) VALUES (4, 2, 2);
INSERT INTO `mydb`.`floor` (`floor_id`, `building_id`, `floor_number`) VALUES (5, 3, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`room`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`room` (`room_id`, `floor_id`, `room_number`, `capacity`, `room_type`) VALUES (1, 1, '101', 50, 'Лекційна');
INSERT INTO `mydb`.`room` (`room_id`, `floor_id`, `room_number`, `capacity`, `room_type`) VALUES (2, 1, '102', 30, 'Лекційна');
INSERT INTO `mydb`.`room` (`room_id`, `floor_id`, `room_number`, `capacity`, `room_type`) VALUES (3, 3, '301', 40, 'Лабораторна');
INSERT INTO `mydb`.`room` (`room_id`, `floor_id`, `room_number`, `capacity`, `room_type`) VALUES (4, 4, '201', 35, 'Лекційна');
INSERT INTO `mydb`.`room` (`room_id`, `floor_id`, `room_number`, `capacity`, `room_type`) VALUES (5, 5, '101', 25, 'Лабораторна');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`professor`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`professor` (`professor_id`, `professor_name`) VALUES (1, 'Іван Іванів');
INSERT INTO `mydb`.`professor` (`professor_id`, `professor_name`) VALUES (2, 'Марія Петренко');
INSERT INTO `mydb`.`professor` (`professor_id`, `professor_name`) VALUES (3, 'Олександр Сидоренко');
INSERT INTO `mydb`.`professor` (`professor_id`, `professor_name`) VALUES (4, 'Наталія Коваль');
INSERT INTO `mydb`.`professor` (`professor_id`, `professor_name`) VALUES (5, 'Петро Миколаєнко');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`room_equipment`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`room_equipment` (`equipment_id`, `room_id`, `equipment_name`, `quantity`) VALUES (1, 1, 'Проектор', 2);
INSERT INTO `mydb`.`room_equipment` (`equipment_id`, `room_id`, `equipment_name`, `quantity`) VALUES (2, 3, 'Компютери', 20);
INSERT INTO `mydb`.`room_equipment` (`equipment_id`, `room_id`, `equipment_name`, `quantity`) VALUES (3, 4, 'Екран', 1);
INSERT INTO `mydb`.`room_equipment` (`equipment_id`, `room_id`, `equipment_name`, `quantity`) VALUES (4, 5, 'Мікроскопи', 15);
INSERT INTO `mydb`.`room_equipment` (`equipment_id`, `room_id`, `equipment_name`, `quantity`) VALUES (5, 2, 'Аудіосистема', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`room_condition`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`room_condition` (`condition_id`, `room_id`, `condition_description`, `date_reported`) VALUES (1, 1, 'Не працює кондиціонер', '2023-01-05');
INSERT INTO `mydb`.`room_condition` (`condition_id`, `room_id`, `condition_description`, `date_reported`) VALUES (2, 3, 'Пошкоджений стіл', '2023-02-10');
INSERT INTO `mydb`.`room_condition` (`condition_id`, `room_id`, `condition_description`, `date_reported`) VALUES (3, 4, 'Проблеми з електропостачанням', '2023-03-15');
INSERT INTO `mydb`.`room_condition` (`condition_id`, `room_id`, `condition_description`, `date_reported`) VALUES (4, 2, 'Проблеми зі звуковою системою', '2023-04-20');
INSERT INTO `mydb`.`room_condition` (`condition_id`, `room_id`, `condition_description`, `date_reported`) VALUES (5, 5, 'Все в гарному стані', '2023-05-25');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`maintenance_request`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`maintenance_request` (`request_id`, `room_id`, `description`, `date_requested`, `status`) VALUES (1, 1, 'Потрібен ремонт кондиціонера', '2023-01-10', 'В обробці');
INSERT INTO `mydb`.`maintenance_request` (`request_id`, `room_id`, `description`, `date_requested`, `status`) VALUES (2, 3, 'Потрібна заміна столу', '2023-02-15', 'В роботі');
INSERT INTO `mydb`.`maintenance_request` (`request_id`, `room_id`, `description`, `date_requested`, `status`) VALUES (3, 4, 'Потрібен ремонт електропостачання', '2023-03-20', 'Завершено');
INSERT INTO `mydb`.`maintenance_request` (`request_id`, `room_id`, `description`, `date_requested`, `status`) VALUES (4, 2, 'Потрібен ремонт звукової системи', '2023-04-25', 'В обробці');
INSERT INTO `mydb`.`maintenance_request` (`request_id`, `room_id`, `description`, `date_requested`, `status`) VALUES (5, 5, 'Регулярна перевірка', '2023-06-01', 'Заплановано');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`room_reservation`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`room_reservation` (`reservation_id`, `room_id`, `professor_id`, `subject_id`, `day_of_week`, `start_time`, `end_time`, `status`) VALUES (1, 1, 1, 101, 'Понеділок', '10:00', '12:00', 'Активна');
INSERT INTO `mydb`.`room_reservation` (`reservation_id`, `room_id`, `professor_id`, `subject_id`, `day_of_week`, `start_time`, `end_time`, `status`) VALUES (2, 3, 2, 201, 'Вівторок', '14:00', '16:00', 'Активна');
INSERT INTO `mydb`.`room_reservation` (`reservation_id`, `room_id`, `professor_id`, `subject_id`, `day_of_week`, `start_time`, `end_time`, `status`) VALUES (3, 4, 3, 301, 'Середа', '09:00', '11:00', 'Активна');
INSERT INTO `mydb`.`room_reservation` (`reservation_id`, `room_id`, `professor_id`, `subject_id`, `day_of_week`, `start_time`, `end_time`, `status`) VALUES (4, 2, 4, 101, 'Четвер', '11:00', '13:00', 'Скасована');
INSERT INTO `mydb`.`room_reservation` (`reservation_id`, `room_id`, `professor_id`, `subject_id`, `day_of_week`, `start_time`, `end_time`, `status`) VALUES (5, 5, 5, 201, 'Пятниця', '13:00', '15:00', 'Активна');

COMMIT;